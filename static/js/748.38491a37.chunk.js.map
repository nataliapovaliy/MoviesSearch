{"version":3,"file":"static/js/748.38491a37.chunk.js","mappings":"2PAEaA,EAAYC,EAAAA,GAAAA,KAAH,8JASTC,EAAQD,EAAAA,GAAAA,MAAH,8HAQLE,EAAeF,EAAAA,GAAAA,OAAH,mF,SCqCzB,EAlDmB,WACf,OAA8CG,EAAAA,EAAAA,UAAS,IAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,cAC/B,GAA0CP,EAAAA,EAAAA,WAAS,GAAnD,eAAOQ,EAAP,KAAsBC,EAAtB,KACA,GAAkCT,EAAAA,EAAAA,WAAS,GAA3C,eAAOU,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,WAAYH,IAExBI,EAAAA,EAAAA,YAAU,WACQ,KAAVV,GAA0B,OAAVA,IACpBW,EAAAA,EAAAA,IAAiBX,GACZY,MAAK,SAAAC,GACFjB,EAAmBiB,GACC,IAAhBA,EAAKC,QAAcX,GAAiB,EAC3C,GAER,GAAE,CAACH,IAYJ,OACI,iCACI,UAACV,EAAD,CAAWyB,SAVE,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OACnBpB,EAAgB,CAAEqB,WAAYF,EAAKG,SAASD,WAAWE,QACvDJ,EAAKK,QACLpB,GAAiB,EACpB,EAIO,WACI,SAACX,EAAD,CAAOgC,KAAK,OAAOC,KAAK,aAAaC,SAb5B,WAAOrB,GAAcD,EAAW,KAczC,SAACX,EAAD,CAAc+B,KAAK,SAASG,SAAUvB,EAAtC,wBAGJ,wBACKT,EAAgBiC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACjB,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAACC,KAAM3B,GAAjC,SAA6CuB,KADxCC,EADQ,MAOxB5B,IAAiB,sEAG7B,C,+LCpDKgC,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACoBC,EAAAA,EAAAA,GAAM,sBAAuB,CAChDC,OAAQ,CACJC,QAASJ,EACTK,KAAM,MAJX,cACGC,EADH,yBAQIA,EAAS3B,KAAK4B,SARlB,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BZ,GAA9B,wFACoBM,EAAAA,EAAAA,GAAM,UAAD,OAAWN,GAAM,CACzCO,OAAQ,CACJC,QAASJ,KAHd,cACGM,EADH,yBAOIA,EAAS3B,MAPb,kEAUA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAAgCX,GAAhC,wFACoBoC,EAAAA,EAAAA,GAAM,gBAAiB,CAC1CC,OAAQ,CACJC,QAASJ,EACTlC,MAAAA,KAJL,cACGwC,EADH,yBAQIA,EAAS3B,KAAK4B,SARlB,kEAWA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bb,GAA9B,wFACoBM,EAAAA,EAAAA,GAAM,UAAD,OAAWN,EAAX,YAAyB,CACjDO,OAAQ,CACJC,QAASJ,KAHd,cACGM,EADH,yBAOIA,EAAS3B,KAAK+B,MAPlB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCf,GAAjC,wFACoBM,EAAAA,EAAAA,GAAM,UAAD,OAAWN,EAAX,YAAyB,CACjDO,OAAQ,CACJC,QAASJ,KAHd,cACGM,EADH,yBAOIA,EAAS3B,KAAK4B,SAPlB,kEA5CPL,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormInput = styled.form`\nmargin-top: 20px;\n    margin-left: 20px;\n    width: 450px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`\n\nexport const Input = styled.input`\n    padding: 0;\n    height: 30px;\n    width: 300px;\n    margin-right: 20px;\n    font-size: 14px;\n`\n\nexport const ButtonSearch = styled.button`\n    height: 30px;\n    width: 90px;\n    font-size: 16px;\n`","import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\nimport { fetchMovieSearch } from \"services/moviesApi\";\nimport { FormInput, Input, ButtonSearch } from './MoviesPage.styled';\n\nconst MoviesPage = () => {\n    const [querySearchText, setQuerySearchText] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('searchText');\n    const [isSearchMovie, setIsSearchMovie] = useState(false);\n    const [isDisable, setIsDisable] = useState(true);\n\n    const location = useLocation();\n    console.log(\"location\", location);\n\n    useEffect(() => {\n        if (query !== '' && query !== null)\n        fetchMovieSearch(query)\n            .then(data => {\n                setQuerySearchText(data);\n                if (data.length === 0) setIsSearchMovie(true);\n            });\n        \n    }, [query])\n    \n    const handleChange = () => {setIsDisable(!isDisable)}\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const form = event.target;\n        setSearchParams({ searchText: form.elements.searchText.value })\n        form.reset();\n        setIsSearchMovie(false);\n    }\n\n    return (\n        <>\n            <FormInput onSubmit={handleSubmit}>\n                <Input type=\"text\" name=\"searchText\" onChange={handleChange}/>\n                <ButtonSearch type=\"submit\" disabled={isDisable}>Search</ButtonSearch>\n            </FormInput>\n\n            <ul>\n                {querySearchText.map(({ title, id }) => (\n                    <li key={id}>\n                        <Link to={`${id}`} state={{from: location}}>{title}</Link>\n                    </li>\n                ))}\n            </ul>\n\n            {isSearchMovie && <p>We don't have any movie for this search.</p>}\n    </>\n    )\n}\n\nexport default MoviesPage","import axios from 'axios';\n\nconst KEY = '2f1ef3830286d020340d6039bd2ecd1f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesTrend() {\n    const response = await axios('/trending/movie/day', {\n        params: {\n            api_key: KEY,\n            size: 20,\n        }\n    })\n    // console.log(response.data.results);\n    return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n    const response = await axios(`/movie/${id}`, {\n        params: {\n            api_key: KEY,\n        },\n    });\n    // console.log(response.data);\n    return response.data;\n}\n\nexport async function fetchMovieSearch(query) {\n    const response = await axios(`/search/movie`, {\n        params: {\n            api_key: KEY,\n            query,\n        },\n    });\n    // console.log('data.results >>>', response.data.results);\n    return response.data.results;\n}\n\nexport async function fetchMovieCast(id) {\n    const response = await axios(`/movie/${id}/credits`, {\n        params: {\n            api_key: KEY,\n        },\n    });\n\n    return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n    const response = await axios(`/movie/${id}/reviews`, {\n        params: {\n            api_key: KEY,\n        },\n    });\n\n    return response.data.results;\n}"],"names":["FormInput","styled","Input","ButtonSearch","useState","querySearchText","setQuerySearchText","useSearchParams","searchParams","setSearchParams","query","get","isSearchMovie","setIsSearchMovie","isDisable","setIsDisable","location","useLocation","console","log","useEffect","fetchMovieSearch","then","data","length","onSubmit","event","preventDefault","form","target","searchText","elements","value","reset","type","name","onChange","disabled","map","title","id","to","state","from","KEY","fetchMoviesTrend","axios","params","api_key","size","response","results","fetchMovieById","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}