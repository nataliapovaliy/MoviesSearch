{"version":3,"file":"static/js/387.90a3dafe.chunk.js","mappings":"iPAEaA,EAAYC,EAAAA,GAAAA,GAAH,mIAQTC,EAAMD,EAAAA,GAAAA,IAAH,uC,SC4BhB,EAhCa,WACT,OAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAWP,OATAE,EAAAA,EAAAA,YAAW,YACPC,EAAAA,EAAAA,IAAeH,GACVI,MAAK,SAAAC,GACFC,QAAQC,IAAI,aAAcF,GAC1BN,EAASM,EACZ,GAER,GAAE,CAACL,KAGA,8BACMF,GAASA,EAAMU,OAAS,GACtB,+BACI,SAACd,EAAD,UACKI,EAAMW,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,aAAcC,EAApB,EAAoBA,cAAeC,EAAnC,EAAmCA,UAAnC,OACX,2BACI,SAACjB,EAAD,CAAKkB,IAAG,yCAAoCH,GAAgBI,IAAKH,KACjE,uBAAIA,KACJ,uBAAIC,MAHCH,EADE,SASlB,oEAGhB,C,+LClCKM,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACoBC,EAAAA,EAAAA,GAAM,sBAAuB,CAChDC,OAAQ,CACJC,QAASJ,EACTK,KAAM,MAJX,cACGC,EADH,yBAQIA,EAASjB,KAAKkB,SARlB,kEAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bd,GAA9B,wFACoBQ,EAAAA,EAAAA,GAAM,UAAD,OAAWR,GAAM,CACzCS,OAAQ,CACJC,QAASJ,KAHd,cACGM,EADH,yBAOIA,EAASjB,MAPb,kEAUA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,wFACoBR,EAAAA,EAAAA,GAAM,gBAAiB,CAC1CC,OAAQ,CACJC,QAASJ,EACTU,MAAAA,KAJL,cACGJ,EADH,yBAQIA,EAASjB,KAAKkB,SARlB,kEAWA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BO,GAA9B,wFACoBQ,EAAAA,EAAAA,GAAM,UAAD,OAAWR,EAAX,YAAyB,CACjDS,OAAQ,CACJC,QAASJ,KAHd,cACGM,EADH,yBAOIA,EAASjB,KAAKsB,MAPlB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiClB,GAAjC,wFACoBQ,EAAAA,EAAAA,GAAM,UAAD,OAAWR,EAAX,YAAyB,CACjDS,OAAQ,CACJC,QAASJ,KAHd,cACGM,EADH,yBAOIA,EAASjB,KAAKkB,SAPlB,kEA5CPL,EAAAA,EAAAA,SAAAA,QAAyB,8B","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ListCasts = styled.ul`\n    list-style: none;\n    display: flex;\n    gap: 10px;\n    flex-direction: row;\n    flex-wrap: wrap;\n`\n\nexport const Img = styled.img`\nwidth: 150px;\n`","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { fetchMovieCast } from \"services/moviesApi\";\nimport { ListCasts, Img } from './Cast.styled';\n\nconst Cast = () => {\n    const [casts, setCasts] = useState(null);\n    const {movieId} = useParams();\n\n    useEffect (() => {\n        fetchMovieCast(movieId)\n            .then(data => {\n                console.log('casts >>>>', data);\n                setCasts(data);\n            });\n                \n    }, [movieId]);\n\n    return (\n        <>\n            {(casts && casts.length > 0) ? (\n                <>\n                    <ListCasts>\n                        {casts.map(({id, profile_path, original_name, character }) => (\n                        <li key={id}>\n                            <Img src={`https://image.tmdb.org/t/p/w200${profile_path}`} alt={original_name} />\n                            <p>{original_name}</p>\n                            <p>{character}</p>\n                        </li>\n                        ) )}\n                    </ListCasts>\n                </>\n            ) : (<p>We don't have any casts for this movie.</p>)}\n        </>\n    )\n}\n\nexport default Cast\n","import axios from 'axios';\n\nconst KEY = '2f1ef3830286d020340d6039bd2ecd1f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesTrend() {\n    const response = await axios('/trending/movie/day', {\n        params: {\n            api_key: KEY,\n            size: 20,\n        }\n    })\n    // console.log(response.data.results);\n    return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n    const response = await axios(`/movie/${id}`, {\n        params: {\n            api_key: KEY,\n        },\n    });\n    // console.log(response.data);\n    return response.data;\n}\n\nexport async function fetchMovieSearch(query) {\n    const response = await axios(`/search/movie`, {\n        params: {\n            api_key: KEY,\n            query,\n        },\n    });\n    // console.log('data.results >>>', response.data.results);\n    return response.data.results;\n}\n\nexport async function fetchMovieCast(id) {\n    const response = await axios(`/movie/${id}/credits`, {\n        params: {\n            api_key: KEY,\n        },\n    });\n\n    return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n    const response = await axios(`/movie/${id}/reviews`, {\n        params: {\n            api_key: KEY,\n        },\n    });\n\n    return response.data.results;\n}"],"names":["ListCasts","styled","Img","useState","casts","setCasts","movieId","useParams","useEffect","fetchMovieCast","then","data","console","log","length","map","id","profile_path","original_name","character","src","alt","KEY","fetchMoviesTrend","axios","params","api_key","size","response","results","fetchMovieById","fetchMovieSearch","query","cast","fetchMovieReviews"],"sourceRoot":""}