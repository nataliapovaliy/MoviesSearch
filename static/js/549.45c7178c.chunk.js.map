{"version":3,"file":"static/js/549.45c7178c.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetalics.styled.js","pages/MovieDetails/MovieDetails.jsx","hooks/UseFetchMovie/UseFetchMovie.jsx","services/moviesApi.js"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const ButtonGoBack = styled.button`\n    margin: 10px 20px;\n`\nexport const Container = styled.div`\n    margin-left: 20px;\n    padding-bottom: 20px;\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n    border-bottom: 2px solid lightgray;\n`\nexport const ListDetails = styled.div`\n    display: flex;\n    flex-direction: column;\n`\nexport const OverviewTitle = styled.h3`\n    font-size: large;\n`\nexport const OverviewParagraf = styled.p`\n    /* max-width: 500px; */\n`\n\nexport const GenresTitle = styled.p`\n    font-weight: 700;\n`\nexport const GenresDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    \n`\nexport const GenresList = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n`\nexport const GenresItem = styled.li`\n    list-style: none;\n`\nexport const DivDetails = styled.div`\n    margin-left: 20px;\n    margin-bottom: 10px;\n    border-bottom: 2px solid lightgray;\n`","import { useFetchMovie } from \"hooks/UseFetchMovie/UseFetchMovie\"\nimport { Link, Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport { ButtonGoBack, Container, ListDetails, OverviewTitle, OverviewParagraf, GenresTitle, GenresDiv, GenresList, GenresItem, DivDetails } from './MovieDetalics.styled'\nimport defaultfoto from 'img/defaultfoto.jpg';\n\nconst MovieDetails = () => {\n    const navigate = useNavigate();\n    const movie = useFetchMovie();\n    const location = useLocation();\n\n    return (\n        <>\n            {movie && (\n                <>\n                    <ButtonGoBack onClick={() => navigate(location.state?.from ?? '/')}>Go back</ButtonGoBack>\n                    <Container>\n                        <img src={movie.poster_path ? `https://image.tmdb.org/t/p/w300${movie.poster_path}` : defaultfoto} alt={movie.title} />\n                        <ListDetails>\n                            <h2>{movie.title}</h2>\n                            <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n                            <OverviewTitle>Overview</OverviewTitle>\n                            <OverviewParagraf>{movie.overview}</OverviewParagraf>\n                            <GenresDiv>\n                                <GenresTitle>Genres</GenresTitle>\n                                <GenresList>\n                                    {movie.genres.map(({ name, id }) => (\n                                        <GenresItem key={id}>\n                                            <p>{name}</p>\n                                        </GenresItem>\n                                        )\n                                    )}\n                                </GenresList>\n                            </GenresDiv>\n                            \n                        </ListDetails>\n                    </Container>\n                    <DivDetails>\n                        <p>Additional information</p>\n                        <ul>\n                            <li>\n                                <Link to='cast' state={{from:location.state.from}}>Cast</Link>\n                            </li>\n                            <li>\n                                <Link to='reviews' state={{from:location.state.from}}>Reviews</Link>\n                            </li>\n                        </ul>\n                    </DivDetails>    \n                    <Outlet />\n                </>\n            )}\n            \n        </>\n    )\n}\n\nexport default MovieDetails","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieById } from \"services/moviesApi\"\n\nexport const useFetchMovie = () => {\n    const [movie, setMovie] = useState(null);\n    const { movieId } = useParams();\n    // console.log(movieId);\n    useEffect(() => {\n        fetchMovieById(movieId)\n            .then(setMovie);\n    }, [movieId])\n    \n    return movie;\n}","import axios from 'axios';\n\nconst KEY = '2f1ef3830286d020340d6039bd2ecd1f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesTrend() {\n    const response = await axios('/trending/movie/day', {\n        params: {\n            api_key: KEY,\n            size: 20,\n        }\n    })\n    // console.log(response.data.results);\n    return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n    const response = await axios(`/movie/${id}`, {\n        params: {\n            api_key: KEY,\n        },\n    });\n    // console.log(response.data);\n    return response.data;\n}\n\nexport async function fetchMovieSearch(query) {\n    const response = await axios(`/search/movie`, {\n        params: {\n            api_key: KEY,\n            query,\n        },\n    });\n    // console.log('data.results >>>', response.data.results);\n    return response.data.results;\n}\n\nexport async function fetchMovieCast(id) {\n    const response = await axios(`/movie/${id}/credits`, {\n        params: {\n            api_key: KEY,\n        },\n    });\n\n    return response.data.cast;\n}\n\nexport async function fetchMovieReviews(id) {\n    const response = await axios(`/movie/${id}/reviews`, {\n        params: {\n            api_key: KEY,\n        },\n    });\n\n    return response.data.results;\n}"],"names":["ButtonGoBack","styled","Container","ListDetails","OverviewTitle","OverviewParagraf","GenresTitle","GenresDiv","GenresList","GenresItem","DivDetails","navigate","useNavigate","movie","useState","setMovie","movieId","useParams","useEffect","fetchMovieById","then","useFetchMovie","location","useLocation","onClick","state","from","src","poster_path","defaultfoto","alt","title","Math","round","vote_average","overview","genres","map","name","id","to","KEY","fetchMoviesTrend","axios","params","api_key","size","response","data","results","fetchMovieSearch","query","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}